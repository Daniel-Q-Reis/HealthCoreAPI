services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Ensure automatic database creation when volume is NEW
      POSTGRES_DB: ${POSTGRES_DB:-healthcoreapi_db}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      # Check server ready by connecting to 'postgres' database (always exists)
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d postgres -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    environment:
      DJANGO_SETTINGS_MODULE: healthcoreapi.settings.development
      # Database configuration - values are read from .env file
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      # Debugpy configuration for VS Code
      DEBUGPY: "1"
      DEBUGPY_WAIT_FOR_CLIENT: "0"
      DEBUGPY_HOST: "0.0.0.0"
      DEBUGPY_PORT: "5678"
      # Optional: collect static files on startup
      COLLECTSTATIC: "0"
    ports:
      - "8000:8000"
      - "5678:5678"  # debugpy port for VS Code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./:/usr/src/app:cached
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/login/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s


  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    environment:
      DJANGO_SETTINGS_MODULE: healthcoreapi.settings.development
      DB_NAME: ${POSTGRES_DB:-healthcoreapi_db}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_HOST: db
      DB_PORT: "5432"
    command: ["/bin/bash", "/opt/docker/scripts/celery-worker.sh"]
    volumes:
      - ./:/usr/src/app:cached
    depends_on:
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    environment:
      DJANGO_SETTINGS_MODULE: healthcoreapi.settings.development
      DB_NAME: ${POSTGRES_DB:-healthcoreapi_db}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_HOST: db
      DB_PORT: "5432"
    command: ["/bin/bash", "/opt/docker/scripts/celery-beat.sh"]
    volumes:
      - ./:/usr/src/app:cached
    depends_on:
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped


volumes:
  db-data:

networks:
  default:
    driver: bridge
